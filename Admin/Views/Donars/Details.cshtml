@model LayerDb.Donar

@{
    ViewBag.Title = "Details";
}


<div class="col-md-8">
    <div class="card">
        <div class="card-header card-header-icon" data-background-color="purple">
            <i class="material-icons">assignment</i>
        </div>
        <div class="card-content">

            <div>
                <h4>Donar</h4>
                <hr />
                <dl class="dl-horizontal">
                    <dt>
                        Name
                    </dt>

                    <dd>
                        @(Model.FirstName + " " + Model.LastName)
                    </dd>
                    @if (Model.DateOfBirth != null)
                    {

                        <dt>
                            Age
                        </dt>

                        <dd>
                            @{
                                var today = DateTime.Today;
                                // Calculate the age.
                                var age = today.Year - ((DateTime)Model.DateOfBirth).Year;
                                // Go back to the year the person was born in case of a leap year
                                if (((DateTime)Model.DateOfBirth) > today.AddYears(-age))
                                {
                                    age--;
                                }
                            }
                            @age years old
                        </dd>

                        <dt>
                            Date Of Birth
                        </dt>

                        <dd>
                            @(((DateTime)Model.DateOfBirth).ToString("dd/MM/yyyy"))
                        </dd>
                    }

                    <dt>
                        Blood Group
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.BloodGroup.Name)
                    </dd>

                    <dt>
                        Gender
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Gender.Name)
                    </dd>

                    <dt>
                        Martial Status
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.MartialStatu.Name)
                    </dd>

                    <dt>
                        Mobile Phone
                    </dt>

                    <dd>
                        <a href="tel:@Model.MobilePhone">@Model.MobilePhone</a><br/>
                        <a href="tel:@Model.AlternateMobilePhone">@Model.AlternateMobilePhone</a>
                    </dd>

                    <dt>
                        EMail Address
                    </dt>

                    <dd>
                        <a href="mailto:@Model.EmailAddress">@Model.EmailAddress</a>
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Weight)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Weight)
                    </dd>

                    <dt>
                        Street Address
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.StreetAddress), @Html.DisplayFor(model => model.ColonyArea.Name), @Model.ColonyArea.CityArea.Name
                    </dd>

                    <dt>
                        Added On
                    </dt>

                    <dd>
                        @Model.OnCreated.ToString("dd/MM/yyyy")
                    </dd>

                    <dt>
                        Last Modified On
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.OnModified)
                    </dd>
                    @if (Model.Donars != null && Model.Donars.Count > 0)
                    {

                        <dt>
                            Refered By
                        </dt>

                        <dd>

                            @foreach (var u in Model.Donars)
                            {
                                <a href="@Url.Action("Details", "Donars", new {id = u.DonarId})">
                                    @u.FirstName @u.LastName
                                </a>
                            }
                        </dd>
                    }
                    @if (Model.Donars1 != null && Model.Donars1.Count > 0)
                    {

                        <dt>
                            Refers
                        </dt>

                        <dd>

                            @foreach (var u in Model.Donars1)
                            {
                                <a href="@Url.Action("Details", "Donars", new {id = u.DonarId})">
                                    @u.FirstName @u.LastName
                                </a><br/>
                            }
                        </dd>
                    }

                </dl>
            </div>
           

            <p>
                @Html.ActionLink("Edit", "Edit", new { id = Model.DonarId }) |
                @Html.ActionLink("Back to List", "Index")
            </p>
        </div>
    </div>
</div>

<div class="col-md-4">
    <div class="card">
        <div class="card-header card-header-icon" data-background-color="purple">
            <i class="material-icons">assignment</i>
        </div>
        <div class="card-content">
            @{
                var donateds = Model.AcceptorDetails.OrderByDescending(d => d.BleedDate);
                var lastDonated = donateds.FirstOrDefault();
                var accepteds = Model.AcceptorDetails1.OrderByDescending(d => d.BleedDate);
                var lastAccepted = accepteds.FirstOrDefault();
            }
            @Html.ActionLink("Donated Blood", "Create", new {donarId = Model.DonarId, controller = "AcceptorDetails"}) |
            @Html.ActionLink("Accept Blood", "Create", new {acceptorId = Model.DonarId, controller = "AcceptorDetails"})
            <br /><br />
            @if (lastDonated != null)
            {
                <br/><b>Last Blood Donated: </b> @Generics.Functions.RelativeDate(lastDonated.BleedDate)
            }
            @if (lastAccepted != null)
            {
                <br/><b>Last Blood Accepted: </b> @Generics.Functions.RelativeDate(lastAccepted.BleedDate)
            }
            <h4><b>Blood Donated Details</b></h4>
            @Html.Partial("~/Views/AcceptorDetails/AcceptedBy.cshtml",donateds)

            <h4><b>Blood Accepted Details</b></h4>
            @Html.Partial("~/Views/AcceptorDetails/DonatedBy.cshtml", accepteds)

        </div>
    </div>
</div>

